import java.time.Instant

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'io.freefair.lombok'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8
targetCompatibility = 1.8

afterEvaluate {

  tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.debug = true
    options.compilerArgs << "-parameters"
    options.compilerArgs << "-Xlint:unchecked"
    options.compilerArgs << "-Xlint:deprecation"
  }

  tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
    options.addStringOption('Xdoclint:none', '-quiet')
  }

  tasks.withType(Test) {
    testLogging.events = ["FAILED", "PASSED", "SKIPPED", "STANDARD_OUT", "STANDARD_ERROR"]
  }

  tasks.withType(VerificationTask) {
    if (group == null) {
      group = "Verification"
    }
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  group = "Build"
  archiveClassifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  group = "Build"
  archiveClassifier = 'javadoc'
  from javadoc.destinationDir
}

jar {
  manifest {
    attributes(
        'Implementation-Title': project.name,
        'Implementation-Vendor-Id': project.group,
        'Implementation-Version': version.toString(),
        'Created-By': "Gradle ${project.getGradle().getGradleVersion()}",
        'Build-Jdk': System.getProperty('java.version'),
        'Build-Time': "${Instant.now()}"
    )
  }
}

test {
  useJUnitPlatform()
}

dependencies {
  testCompile 'org.slf4j:slf4j-api'
  testCompile 'org.junit.jupiter:junit-jupiter-api'
  testCompile 'org.mockito:mockito-junit-jupiter'

  testRuntime 'org.junit.jupiter:junit-jupiter-engine'
}
